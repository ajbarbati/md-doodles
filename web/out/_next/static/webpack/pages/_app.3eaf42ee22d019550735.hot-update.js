webpackHotUpdate_N_E("pages/_app",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./litter.css":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./litter.css ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ./node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, ".litters {\r\n    width: 100%;\r\n    display: grid;\r\n    place-items: center;\r\n}\r\n\r\n    .litterGrid {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        width: 75%;\r\n        place-items: center;\r\n    }\r\n\r\n        .litterWrap {\r\n            display: grid;\r\n            grid-template-columns: 1fr 30% 1fr;\r\n            grid-template-rows: 1fr;\r\n            place-items: center;\r\n            width: 100%;\r\n        }\r\n\r\n            .Mother img, .Father img {\r\n                width:  17em;\r\n                height: 17em;\r\n                object-fit: cover;\r\n            }\r\n\r\n            .litterInfo img {\r\n                object-fit: cover;\r\n                width: 15em;\r\n                height: 10em\r\n            }\r\n\r\n            @media(max-width: 500px) {\r\n                .Mother img, .Father img {\r\n                    width:  17em;\r\n                    height: 17em;\r\n                }\r\n    \r\n                .litterInfo img {\r\n                    width: 15em;\r\n                    height: 10em\r\n                }\r\n            }", "",{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/md-doodles/web/litter.css"],"names":[],"mappings":"AAAA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB;;IAEI;QACI,aAAa;QACb,0BAA0B;QAC1B,UAAU;QACV,mBAAmB;IACvB;;QAEI;YACI,aAAa;YACb,kCAAkC;YAClC,uBAAuB;YACvB,mBAAmB;YACnB,WAAW;QACf;;YAEI;gBACI,YAAY;gBACZ,YAAY;gBACZ,iBAAiB;YACrB;;YAEA;gBACI,iBAAiB;gBACjB,WAAW;gBACX;YACJ;;YAEA;gBACI;oBACI,YAAY;oBACZ,YAAY;gBAChB;;gBAEA;oBACI,WAAW;oBACX;gBACJ;YACJ","file":"litter.css","sourcesContent":[".litters {\r\n    width: 100%;\r\n    display: grid;\r\n    place-items: center;\r\n}\r\n\r\n    .litterGrid {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        width: 75%;\r\n        place-items: center;\r\n    }\r\n\r\n        .litterWrap {\r\n            display: grid;\r\n            grid-template-columns: 1fr 30% 1fr;\r\n            grid-template-rows: 1fr;\r\n            place-items: center;\r\n            width: 100%;\r\n        }\r\n\r\n            .Mother img, .Father img {\r\n                width:  17em;\r\n                height: 17em;\r\n                object-fit: cover;\r\n            }\r\n\r\n            .litterInfo img {\r\n                object-fit: cover;\r\n                width: 15em;\r\n                height: 10em\r\n            }\r\n\r\n            @media(max-width: 500px) {\r\n                .Mother img, .Father img {\r\n                    width:  17em;\r\n                    height: 17em;\r\n                }\r\n    \r\n                .litterInfo img {\r\n                    width: 15em;\r\n                    height: 10em\r\n                }\r\n            }"]}]);
// Exports
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGl0dGVyLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLG9HQUErQztBQUN6RjtBQUNBO0FBQ0EsY0FBYyxRQUFTLGFBQWEsb0JBQW9CLHNCQUFzQiw0QkFBNEIsS0FBSyx5QkFBeUIsMEJBQTBCLHVDQUF1Qyx1QkFBdUIsZ0NBQWdDLFNBQVMsNkJBQTZCLDhCQUE4QixtREFBbUQsd0NBQXdDLG9DQUFvQyw0QkFBNEIsYUFBYSw4Q0FBOEMsaUNBQWlDLGlDQUFpQyxzQ0FBc0MsaUJBQWlCLHFDQUFxQyxzQ0FBc0MsZ0NBQWdDLGlEQUFpRCw4Q0FBOEMsOENBQThDLHFDQUFxQyxxQ0FBcUMscUJBQXFCLDZDQUE2QyxvQ0FBb0MseURBQXlELGlCQUFpQixPQUFPLHVIQUF1SCxVQUFVLFVBQVUsWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLFdBQVcsWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsYUFBYSxXQUFXLE1BQU0sS0FBSyxXQUFXLFdBQVcsYUFBYSxPQUFPLEtBQUssYUFBYSxZQUFZLE1BQU0sTUFBTSxLQUFLLE1BQU0sV0FBVyxXQUFXLFFBQVEsTUFBTSxXQUFXLE1BQU0sTUFBTSx1REFBdUQsb0JBQW9CLHNCQUFzQiw0QkFBNEIsS0FBSyx5QkFBeUIsMEJBQTBCLHVDQUF1Qyx1QkFBdUIsZ0NBQWdDLFNBQVMsNkJBQTZCLDhCQUE4QixtREFBbUQsd0NBQXdDLG9DQUFvQyw0QkFBNEIsYUFBYSw4Q0FBOEMsaUNBQWlDLGlDQUFpQyxzQ0FBc0MsaUJBQWlCLHFDQUFxQyxzQ0FBc0MsZ0NBQWdDLGlEQUFpRCw4Q0FBOEMsOENBQThDLHFDQUFxQyxxQ0FBcUMscUJBQXFCLDZDQUE2QyxvQ0FBb0MseURBQXlELGlCQUFpQixHQUFHO0FBQ251RjtBQUNBIiwiZmlsZSI6InN0YXRpYy93ZWJwYWNrL3BhZ2VzL19hcHAuM2VhZjQyZWUyMmQwMTk1NTA3MzUuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyh0cnVlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmxpdHRlcnMge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuICAgIC5saXR0ZXJHcmlkIHtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXHJcXG4gICAgICAgIHdpZHRoOiA3NSU7XFxyXFxuICAgICAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgICAgICAubGl0dGVyV3JhcCB7XFxyXFxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzMCUgMWZyO1xcclxcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xcclxcbiAgICAgICAgICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgLk1vdGhlciBpbWcsIC5GYXRoZXIgaW1nIHtcXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6ICAxN2VtO1xcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE3ZW07XFxyXFxuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAubGl0dGVySW5mbyBpbWcge1xcclxcbiAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE1ZW07XFxyXFxuICAgICAgICAgICAgICAgIGhlaWdodDogMTBlbVxcclxcbiAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiA1MDBweCkge1xcclxcbiAgICAgICAgICAgICAgICAuTW90aGVyIGltZywgLkZhdGhlciBpbWcge1xcclxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICAxN2VtO1xcclxcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxN2VtO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuICAgIFxcclxcbiAgICAgICAgICAgICAgICAubGl0dGVySW5mbyBpbWcge1xcclxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1ZW07XFxyXFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwZW1cXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgIH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9hamIwMi9PbmVEcml2ZS9Eb2N1bWVudHMvV29yay9tZC1kb29kbGVzL3dlYi9saXR0ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0lBRUk7UUFDSSxhQUFhO1FBQ2IsMEJBQTBCO1FBQzFCLFVBQVU7UUFDVixtQkFBbUI7SUFDdkI7O1FBRUk7WUFDSSxhQUFhO1lBQ2Isa0NBQWtDO1lBQ2xDLHVCQUF1QjtZQUN2QixtQkFBbUI7WUFDbkIsV0FBVztRQUNmOztZQUVJO2dCQUNJLFlBQVk7Z0JBQ1osWUFBWTtnQkFDWixpQkFBaUI7WUFDckI7O1lBRUE7Z0JBQ0ksaUJBQWlCO2dCQUNqQixXQUFXO2dCQUNYO1lBQ0o7O1lBRUE7Z0JBQ0k7b0JBQ0ksWUFBWTtvQkFDWixZQUFZO2dCQUNoQjs7Z0JBRUE7b0JBQ0ksV0FBVztvQkFDWDtnQkFDSjtZQUNKXCIsXCJmaWxlXCI6XCJsaXR0ZXIuY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5saXR0ZXJzIHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiAgICAubGl0dGVyR3JpZCB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxyXFxuICAgICAgICB3aWR0aDogNzUlO1xcclxcbiAgICAgICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAgICAgLmxpdHRlcldyYXAge1xcclxcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMzAlIDFmcjtcXHJcXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcXHJcXG4gICAgICAgICAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcclxcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgIC5Nb3RoZXIgaW1nLCAuRmF0aGVyIGltZyB7XFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOiAgMTdlbTtcXHJcXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxN2VtO1xcclxcbiAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgLmxpdHRlckluZm8gaW1nIHtcXHJcXG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxNWVtO1xcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwZW1cXHJcXG4gICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgQG1lZGlhKG1heC13aWR0aDogNTAwcHgpIHtcXHJcXG4gICAgICAgICAgICAgICAgLk1vdGhlciBpbWcsIC5GYXRoZXIgaW1nIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAgMTdlbTtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTdlbTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICBcXHJcXG4gICAgICAgICAgICAgICAgLmxpdHRlckluZm8gaW1nIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNWVtO1xcclxcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMGVtXFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB9XCJdfV0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==