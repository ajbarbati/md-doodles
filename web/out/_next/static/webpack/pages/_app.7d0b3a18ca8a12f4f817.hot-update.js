webpackHotUpdate_N_E("pages/_app",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./info.css":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./info.css ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ./node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, ".infoPage {\r\n    padding-top: 5em;\r\n    width: 100%;\r\n    display: grid;\r\n    place-items: center;\r\n    grid-template-columns: 1fr;\r\n    grid-auto-rows: auto;\r\n}\r\n\r\n    .infoBWrap {\r\n        grid-column: 1 !important;\r\n        grid-row: 2;\r\n\r\n        width: 100%;\r\n        display: grid;\r\n        place-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    }\r\n\r\n        .infoPage div:nth-of-type(even){\r\n            grid-column: 2 / 5;\r\n        }\r\n\r\n        .infoBlock {\r\n            grid-column: 1 / 4;\r\n\r\n            display: grid;\r\n            grid-template-columns: auto 1fr;\r\n            grid-template-rows: 1fr auto;\r\n            place-items: center;\r\n            width: 100%;\r\n        }\r\n\r\n            .infoBlock img {\r\n                grid-row: 1 / 3;\r\n                grid-column: 1;\r\n\r\n                width: 12.5em;\r\n                height: 12.5em;\r\n                object-fit: cover;\r\n            }\r\n\r\n            .infoBlock h3 {\r\n                margin: 0;\r\n                padding: ;\r\n            }\r\n           \r\n", "",{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/md-doodles/web/info.css"],"names":[],"mappings":"AAAA;IACI,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,0BAA0B;IAC1B,oBAAoB;AACxB;;IAEI;QACI,yBAAyB;QACzB,WAAW;;QAEX,WAAW;QACX,aAAa;QACb,mBAAmB;QACnB,sCAAsC;IAC1C;;QAEI;YACI,kBAAkB;QACtB;;QAEA;YACI,kBAAkB;;YAElB,aAAa;YACb,+BAA+B;YAC/B,4BAA4B;YAC5B,mBAAmB;YACnB,WAAW;QACf;;YAEI;gBACI,eAAe;gBACf,cAAc;;gBAEd,aAAa;gBACb,cAAc;gBACd,iBAAiB;YACrB;;YAEA;gBACI,SAAS;gBACT,SAAS;YACb","file":"info.css","sourcesContent":[".infoPage {\r\n    padding-top: 5em;\r\n    width: 100%;\r\n    display: grid;\r\n    place-items: center;\r\n    grid-template-columns: 1fr;\r\n    grid-auto-rows: auto;\r\n}\r\n\r\n    .infoBWrap {\r\n        grid-column: 1 !important;\r\n        grid-row: 2;\r\n\r\n        width: 100%;\r\n        display: grid;\r\n        place-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    }\r\n\r\n        .infoPage div:nth-of-type(even){\r\n            grid-column: 2 / 5;\r\n        }\r\n\r\n        .infoBlock {\r\n            grid-column: 1 / 4;\r\n\r\n            display: grid;\r\n            grid-template-columns: auto 1fr;\r\n            grid-template-rows: 1fr auto;\r\n            place-items: center;\r\n            width: 100%;\r\n        }\r\n\r\n            .infoBlock img {\r\n                grid-row: 1 / 3;\r\n                grid-column: 1;\r\n\r\n                width: 12.5em;\r\n                height: 12.5em;\r\n                object-fit: cover;\r\n            }\r\n\r\n            .infoBlock h3 {\r\n                margin: 0;\r\n                padding: ;\r\n            }\r\n           \r\n"]}]);
// Exports
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaW5mby5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyxvR0FBK0M7QUFDekY7QUFDQTtBQUNBLGNBQWMsUUFBUyxjQUFjLHlCQUF5QixvQkFBb0Isc0JBQXNCLDRCQUE0QixtQ0FBbUMsNkJBQTZCLEtBQUssd0JBQXdCLHNDQUFzQyx3QkFBd0IsNEJBQTRCLDBCQUEwQixnQ0FBZ0MsbURBQW1ELFNBQVMsZ0RBQWdELG1DQUFtQyxhQUFhLDRCQUE0QixtQ0FBbUMsa0NBQWtDLGdEQUFnRCw2Q0FBNkMsb0NBQW9DLDRCQUE0QixhQUFhLG9DQUFvQyxvQ0FBb0MsbUNBQW1DLHNDQUFzQyxtQ0FBbUMsc0NBQXNDLGlCQUFpQixtQ0FBbUMsOEJBQThCLDhCQUE4QixpQkFBaUIsMEJBQTBCLHFIQUFxSCxZQUFZLFdBQVcsVUFBVSxZQUFZLGFBQWEsYUFBYSxPQUFPLEtBQUssWUFBWSxZQUFZLFVBQVUsVUFBVSxZQUFZLGFBQWEsT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLGFBQWEsV0FBVyxZQUFZLGFBQWEsYUFBYSxXQUFXLE1BQU0sS0FBSyxXQUFXLFlBQVksV0FBVyxXQUFXLGFBQWEsT0FBTyxLQUFLLFdBQVcsV0FBVyxzREFBc0QseUJBQXlCLG9CQUFvQixzQkFBc0IsNEJBQTRCLG1DQUFtQyw2QkFBNkIsS0FBSyx3QkFBd0Isc0NBQXNDLHdCQUF3Qiw0QkFBNEIsMEJBQTBCLGdDQUFnQyxtREFBbUQsU0FBUyxnREFBZ0QsbUNBQW1DLGFBQWEsNEJBQTRCLG1DQUFtQyxrQ0FBa0MsZ0RBQWdELDZDQUE2QyxvQ0FBb0MsNEJBQTRCLGFBQWEsb0NBQW9DLG9DQUFvQyxtQ0FBbUMsc0NBQXNDLG1DQUFtQyxzQ0FBc0MsaUJBQWlCLG1DQUFtQyw4QkFBOEIsOEJBQThCLGlCQUFpQixzQkFBc0I7QUFDaHhGO0FBQ0EiLCJmaWxlIjoic3RhdGljL3dlYnBhY2svcGFnZXMvX2FwcC43ZDBiM2ExOGNhOGExMmY0ZjgxNy5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKHRydWUpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaW5mb1BhZ2Uge1xcclxcbiAgICBwYWRkaW5nLXRvcDogNWVtO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxyXFxuICAgIGdyaWQtYXV0by1yb3dzOiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4gICAgLmluZm9CV3JhcCB7XFxyXFxuICAgICAgICBncmlkLWNvbHVtbjogMSAhaW1wb3J0YW50O1xcclxcbiAgICAgICAgZ3JpZC1yb3c6IDI7XFxyXFxuXFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgICAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcclxcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgICAgIC5pbmZvUGFnZSBkaXY6bnRoLW9mLXR5cGUoZXZlbil7XFxyXFxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIgLyA1O1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgLmluZm9CbG9jayB7XFxyXFxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyA0O1xcclxcblxcclxcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcXHJcXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciBhdXRvO1xcclxcbiAgICAgICAgICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgLmluZm9CbG9jayBpbWcge1xcclxcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMSAvIDM7XFxyXFxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICB3aWR0aDogMTIuNWVtO1xcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEyLjVlbTtcXHJcXG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XFxyXFxuICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgIC5pbmZvQmxvY2sgaDMge1xcclxcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XFxyXFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICBcXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJDOi9Vc2Vycy9hamIwMi9PbmVEcml2ZS9Eb2N1bWVudHMvV29yay9tZC1kb29kbGVzL3dlYi9pbmZvLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiwwQkFBMEI7SUFDMUIsb0JBQW9CO0FBQ3hCOztJQUVJO1FBQ0kseUJBQXlCO1FBQ3pCLFdBQVc7O1FBRVgsV0FBVztRQUNYLGFBQWE7UUFDYixtQkFBbUI7UUFDbkIsc0NBQXNDO0lBQzFDOztRQUVJO1lBQ0ksa0JBQWtCO1FBQ3RCOztRQUVBO1lBQ0ksa0JBQWtCOztZQUVsQixhQUFhO1lBQ2IsK0JBQStCO1lBQy9CLDRCQUE0QjtZQUM1QixtQkFBbUI7WUFDbkIsV0FBVztRQUNmOztZQUVJO2dCQUNJLGVBQWU7Z0JBQ2YsY0FBYzs7Z0JBRWQsYUFBYTtnQkFDYixjQUFjO2dCQUNkLGlCQUFpQjtZQUNyQjs7WUFFQTtnQkFDSSxTQUFTO2dCQUNULFNBQVM7WUFDYlwiLFwiZmlsZVwiOlwiaW5mby5jc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmluZm9QYWdlIHtcXHJcXG4gICAgcGFkZGluZy10b3A6IDVlbTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xcclxcbiAgICBncmlkLWF1dG8tcm93czogYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuICAgIC5pbmZvQldyYXAge1xcclxcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEgIWltcG9ydGFudDtcXHJcXG4gICAgICAgIGdyaWQtcm93OiAyO1xcclxcblxcclxcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgICAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICAgICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgICAgICAuaW5mb1BhZ2UgZGl2Om50aC1vZi10eXBlKGV2ZW4pe1xcclxcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAyIC8gNTtcXHJcXG4gICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgIC5pbmZvQmxvY2sge1xcclxcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxIC8gNDtcXHJcXG5cXHJcXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnI7XFxyXFxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgYXV0bztcXHJcXG4gICAgICAgICAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcclxcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgIC5pbmZvQmxvY2sgaW1nIHtcXHJcXG4gICAgICAgICAgICAgICAgZ3JpZC1yb3c6IDEgLyAzO1xcclxcbiAgICAgICAgICAgICAgICBncmlkLWNvbHVtbjogMTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEyLjVlbTtcXHJcXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMi41ZW07XFxyXFxuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAuaW5mb0Jsb2NrIGgzIHtcXHJcXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xcclxcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgXFxyXFxuXCJdfV0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==