{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\md-doodles\\\\web\\\\pages\\\\posts\\\\[slug].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport client from '../../client';\n\nvar Post = function Post(props) {\n  return __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, props.slug.current));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so it does not return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(\"\\n    *[_type == \\\"product\\\" && slug.current == $slug][0]\\n    \", {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/md-doodles/web/pages/posts/[slug].js"],"names":["client","Post","props","slug","current","getInitialProps","context","query","fetch"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAEpB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,OAAhB,CADJ,CADJ;AAKH,CAPD;;KAAMH,I;;AASNA,IAAI,CAACI,eAAL;AAAA,sEAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB;AADmB,kCAEGA,OAAO,CAACC,KAFX,CAEXJ,IAFW,EAEXA,IAFW,oCAEJ,EAFI;AAAA;AAAA,mBAGNH,MAAM,CAACQ,KAAP,oEAEV;AAAEL,cAAAA,IAAI,EAAJA;AAAF,aAFU,CAHM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeF,IAAf","sourcesContent":["import client from '../../client'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <article>\r\n            <h1>{props.slug.current}</h1>\r\n        </article>\r\n    )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n    // It's important to default the slug so it does not return \"undefined\"\r\n    const { slug = \"\" } = context.query\r\n    return await client.fetch(`\r\n    *[_type == \"product\" && slug.current == $slug][0]\r\n    `, { slug })\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}