{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajb02\\\\OneDrive\\\\Documents\\\\Work\\\\md-doodles\\\\web\\\\components\\\\index-sections\\\\faq.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState, Component } from \"react\";\nimport sanityClient from \"../../client.js\";\nexport default function Testimonials() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      allData = _useState[0],\n      setAll = _useState[1];\n\n  useEffect(function () {\n    sanityClient.fetch(\"*[_type == \\\"faq\\\"] {\\n            title,\\n            description,\\n        }\").then(function (data) {\n      return setAll(data);\n    })[\"catch\"](console.error);\n  }, []);\n  console.log(setAll);\n  return __jsx(\"div\", {\n    className: \"faq\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Featured FAQ\"), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, allData && allData.map(function (data, index) {\n    return __jsx(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, data.title), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, data.description)));\n  })));\n}\n\n_s(Testimonials, \"j4cxbyb9vUxQFB0tqHwlmKBxdI8=\");\n\n_c = Testimonials;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testimonials\");","map":{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/md-doodles/web/components/index-sections/faq.js"],"names":["useEffect","useState","Component","sanityClient","Testimonials","allData","setAll","fetch","then","data","console","error","log","map","index","title","description"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA;;AAAA,kBACXH,QAAQ,CAAC,IAAD,CADG;AAAA,MAC9BI,OAD8B;AAAA,MACrBC,MADqB;;AAGrCN,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,YAAY,CACTI,KADH,mFAOGC,IAPH,CAOQ,UAACC,IAAD;AAAA,aAAUH,MAAM,CAACG,IAAD,CAAhB;AAAA,KAPR,WAQSC,OAAO,CAACC,KARjB;AASD,GAVQ,EAUN,EAVM,CAAT;AAYAD,EAAAA,OAAO,CAACE,GAAR,CAAYN,MAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,IACNA,OAAO,CAACQ,GAAR,CAAY,UAACJ,IAAD,EAAOK,KAAP;AAAA,WACV;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACM,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,IAAI,CAACO,WAAT,CAFF,CADF,CADU;AAAA,GAAZ,CAFJ,CAFF,CADF;AAgBD;;GAhCuBZ,Y;;KAAAA,Y","sourcesContent":["import { useEffect, useState, Component } from \"react\"\r\nimport sanityClient from \"../../client.js\"\r\n\r\nexport default function Testimonials() {\r\n  const [allData, setAll] = useState(null)\r\n\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `*[_type == \"faq\"] {\r\n            title,\r\n            description,\r\n        }`\r\n      )\r\n      .then((data) => setAll(data))\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  console.log(setAll)\r\n  return (\r\n    <div className=\"faq\">\r\n      <h2>Featured FAQ</h2>\r\n      <div className=\"\">\r\n        {allData &&\r\n          allData.map((data, index) => (\r\n            <span key={index}>\r\n              <span>\r\n                <h2>{data.title}</h2>\r\n                <p>{data.description}</p>\r\n              </span>\r\n            </span>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}