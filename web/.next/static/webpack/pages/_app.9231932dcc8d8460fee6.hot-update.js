webpackHotUpdate_N_E("pages/_app",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./pups.css":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./pups.css ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ./node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, ".featuredPups {\r\n    width: 100%;\r\n    height: 100% ;\r\n    \r\n    padding-top: 5em;\r\n}\r\n\r\n    .featuredPupCards {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        place-items: center;\r\n    }\r\n\r\n@media(max-width: 900px) {\r\n    \r\n    .featuredPupCards {\r\n        grid-template-columns: 1fr 1fr ;\r\n    }\r\n\r\n}\r\n\r\n@media(max-width: 675px) {\r\n    \r\n    .pupCard img {\r\n        width:  12em;\r\n        height: 12em;\r\n    }\r\n    .pupCard div {\r\n        width: 12em;\r\n    }\r\n\r\n    .name {\r\n        grid-column: 1 / 3;\r\n    }\r\n\r\n    .available {\r\n        grid-column: 4;\r\n        text-align: right;\r\n    }\r\n\r\n    .breed {\r\n        grid-row: 3;\r\n        grid-column: 1 / 5;\r\n        text-align: center;\r\n    }\r\n\r\n\r\n}\r\n\r\n@media(max-width: 475px) {\r\n    \r\n    .featuredPupCards {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    .pupCard img {\r\n        width:  17em;\r\n        height: 17em;\r\n    }\r\n    .pupCard div {\r\n        width: 17em;\r\n    }\r\n\r\n\r\n}\r\n\r\n/* PUP Pages */\r\n\r\n.pup-routes {\r\n    display: grid;\r\n}", "",{"version":3,"sources":["C:/Users/ajb02/OneDrive/Documents/Work/md-doodles/web/pups.css"],"names":[],"mappings":"AAAA;IACI,WAAW;IACX,aAAa;;IAEb,gBAAgB;AACpB;;IAEI;QACI,aAAa;QACb,kCAAkC;QAClC,mBAAmB;IACvB;;AAEJ;;IAEI;QACI,+BAA+B;IACnC;;AAEJ;;AAEA;;IAEI;QACI,YAAY;QACZ,YAAY;IAChB;IACA;QACI,WAAW;IACf;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,cAAc;QACd,iBAAiB;IACrB;;IAEA;QACI,WAAW;QACX,kBAAkB;QAClB,kBAAkB;IACtB;;;AAGJ;;AAEA;;IAEI;QACI,0BAA0B;IAC9B;IACA;QACI,YAAY;QACZ,YAAY;IAChB;IACA;QACI,WAAW;IACf;;;AAGJ;;AAEA,cAAc;;AAEd;IACI,aAAa;AACjB","file":"pups.css","sourcesContent":[".featuredPups {\r\n    width: 100%;\r\n    height: 100% ;\r\n    \r\n    padding-top: 5em;\r\n}\r\n\r\n    .featuredPupCards {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        place-items: center;\r\n    }\r\n\r\n@media(max-width: 900px) {\r\n    \r\n    .featuredPupCards {\r\n        grid-template-columns: 1fr 1fr ;\r\n    }\r\n\r\n}\r\n\r\n@media(max-width: 675px) {\r\n    \r\n    .pupCard img {\r\n        width:  12em;\r\n        height: 12em;\r\n    }\r\n    .pupCard div {\r\n        width: 12em;\r\n    }\r\n\r\n    .name {\r\n        grid-column: 1 / 3;\r\n    }\r\n\r\n    .available {\r\n        grid-column: 4;\r\n        text-align: right;\r\n    }\r\n\r\n    .breed {\r\n        grid-row: 3;\r\n        grid-column: 1 / 5;\r\n        text-align: center;\r\n    }\r\n\r\n\r\n}\r\n\r\n@media(max-width: 475px) {\r\n    \r\n    .featuredPupCards {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    .pupCard img {\r\n        width:  17em;\r\n        height: 17em;\r\n    }\r\n    .pupCard div {\r\n        width: 17em;\r\n    }\r\n\r\n\r\n}\r\n\r\n/* PUP Pages */\r\n\r\n.pup-routes {\r\n    display: grid;\r\n}"]}]);
// Exports
module.exports = exports;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcHVwcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyxvR0FBK0M7QUFDekY7QUFDQTtBQUNBLGNBQWMsUUFBUyxrQkFBa0Isb0JBQW9CLHNCQUFzQixpQ0FBaUMsS0FBSywrQkFBK0IsMEJBQTBCLCtDQUErQyxnQ0FBZ0MsU0FBUyxrQ0FBa0MsbUNBQW1DLDRDQUE0QyxTQUFTLFNBQVMsa0NBQWtDLDhCQUE4Qix5QkFBeUIseUJBQXlCLFNBQVMsc0JBQXNCLHdCQUF3QixTQUFTLG1CQUFtQiwrQkFBK0IsU0FBUyx3QkFBd0IsMkJBQTJCLDhCQUE4QixTQUFTLG9CQUFvQix3QkFBd0IsK0JBQStCLCtCQUErQixTQUFTLGFBQWEsa0NBQWtDLG1DQUFtQyx1Q0FBdUMsU0FBUyxzQkFBc0IseUJBQXlCLHlCQUF5QixTQUFTLHNCQUFzQix3QkFBd0IsU0FBUyxhQUFhLDRDQUE0QyxzQkFBc0IsS0FBSyxPQUFPLHFIQUFxSCxVQUFVLFdBQVcsWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLGFBQWEsT0FBTyxNQUFNLEtBQUssWUFBWSxPQUFPLE1BQU0sTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssVUFBVSxNQUFNLEtBQUssWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLE9BQU8sS0FBSyxVQUFVLFlBQVksYUFBYSxRQUFRLE1BQU0sTUFBTSxLQUFLLFlBQVksTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssVUFBVSxPQUFPLE1BQU0sV0FBVyxLQUFLLFVBQVUsMkRBQTJELG9CQUFvQixzQkFBc0IsaUNBQWlDLEtBQUssK0JBQStCLDBCQUEwQiwrQ0FBK0MsZ0NBQWdDLFNBQVMsa0NBQWtDLG1DQUFtQyw0Q0FBNEMsU0FBUyxTQUFTLGtDQUFrQyw4QkFBOEIseUJBQXlCLHlCQUF5QixTQUFTLHNCQUFzQix3QkFBd0IsU0FBUyxtQkFBbUIsK0JBQStCLFNBQVMsd0JBQXdCLDJCQUEyQiw4QkFBOEIsU0FBUyxvQkFBb0Isd0JBQXdCLCtCQUErQiwrQkFBK0IsU0FBUyxhQUFhLGtDQUFrQyxtQ0FBbUMsdUNBQXVDLFNBQVMsc0JBQXNCLHlCQUF5Qix5QkFBeUIsU0FBUyxzQkFBc0Isd0JBQXdCLFNBQVMsYUFBYSw0Q0FBNEMsc0JBQXNCLEtBQUssR0FBRztBQUNsM0Y7QUFDQSIsImZpbGUiOiJzdGF0aWMvd2VicGFjay9wYWdlcy9fYXBwLjkyMzE5MzJkY2M4ZDg0NjBmZWU2LmhvdC11cGRhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mZWF0dXJlZFB1cHMge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlIDtcXHJcXG4gICAgXFxyXFxuICAgIHBhZGRpbmctdG9wOiA1ZW07XFxyXFxufVxcclxcblxcclxcbiAgICAuZmVhdHVyZWRQdXBDYXJkcyB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcXHJcXG4gICAgICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG5AbWVkaWEobWF4LXdpZHRoOiA5MDBweCkge1xcclxcbiAgICBcXHJcXG4gICAgLmZlYXR1cmVkUHVwQ2FyZHMge1xcclxcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDtcXHJcXG4gICAgfVxcclxcblxcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEobWF4LXdpZHRoOiA2NzVweCkge1xcclxcbiAgICBcXHJcXG4gICAgLnB1cENhcmQgaW1nIHtcXHJcXG4gICAgICAgIHdpZHRoOiAgMTJlbTtcXHJcXG4gICAgICAgIGhlaWdodDogMTJlbTtcXHJcXG4gICAgfVxcclxcbiAgICAucHVwQ2FyZCBkaXYge1xcclxcbiAgICAgICAgd2lkdGg6IDEyZW07XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLm5hbWUge1xcclxcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAzO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5hdmFpbGFibGUge1xcclxcbiAgICAgICAgZ3JpZC1jb2x1bW46IDQ7XFxyXFxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAuYnJlZWQge1xcclxcbiAgICAgICAgZ3JpZC1yb3c6IDM7XFxyXFxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDU7XFxyXFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuQG1lZGlhKG1heC13aWR0aDogNDc1cHgpIHtcXHJcXG4gICAgXFxyXFxuICAgIC5mZWF0dXJlZFB1cENhcmRzIHtcXHJcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xcclxcbiAgICB9XFxyXFxuICAgIC5wdXBDYXJkIGltZyB7XFxyXFxuICAgICAgICB3aWR0aDogIDE3ZW07XFxyXFxuICAgICAgICBoZWlnaHQ6IDE3ZW07XFxyXFxuICAgIH1cXHJcXG4gICAgLnB1cENhcmQgZGl2IHtcXHJcXG4gICAgICAgIHdpZHRoOiAxN2VtO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuXFxyXFxufVxcclxcblxcclxcbi8qIFBVUCBQYWdlcyAqL1xcclxcblxcclxcbi5wdXAtcm91dGVzIHtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiQzovVXNlcnMvYWpiMDIvT25lRHJpdmUvRG9jdW1lbnRzL1dvcmsvbWQtZG9vZGxlcy93ZWIvcHVwcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxXQUFXO0lBQ1gsYUFBYTs7SUFFYixnQkFBZ0I7QUFDcEI7O0lBRUk7UUFDSSxhQUFhO1FBQ2Isa0NBQWtDO1FBQ2xDLG1CQUFtQjtJQUN2Qjs7QUFFSjs7SUFFSTtRQUNJLCtCQUErQjtJQUNuQzs7QUFFSjs7QUFFQTs7SUFFSTtRQUNJLFlBQVk7UUFDWixZQUFZO0lBQ2hCO0lBQ0E7UUFDSSxXQUFXO0lBQ2Y7O0lBRUE7UUFDSSxrQkFBa0I7SUFDdEI7O0lBRUE7UUFDSSxjQUFjO1FBQ2QsaUJBQWlCO0lBQ3JCOztJQUVBO1FBQ0ksV0FBVztRQUNYLGtCQUFrQjtRQUNsQixrQkFBa0I7SUFDdEI7OztBQUdKOztBQUVBOztJQUVJO1FBQ0ksMEJBQTBCO0lBQzlCO0lBQ0E7UUFDSSxZQUFZO1FBQ1osWUFBWTtJQUNoQjtJQUNBO1FBQ0ksV0FBVztJQUNmOzs7QUFHSjs7QUFFQSxjQUFjOztBQUVkO0lBQ0ksYUFBYTtBQUNqQlwiLFwiZmlsZVwiOlwicHVwcy5jc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmZlYXR1cmVkUHVwcyB7XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBoZWlnaHQ6IDEwMCUgO1xcclxcbiAgICBcXHJcXG4gICAgcGFkZGluZy10b3A6IDVlbTtcXHJcXG59XFxyXFxuXFxyXFxuICAgIC5mZWF0dXJlZFB1cENhcmRzIHtcXHJcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xcclxcbiAgICAgICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcblxcclxcbkBtZWRpYShtYXgtd2lkdGg6IDkwMHB4KSB7XFxyXFxuICAgIFxcclxcbiAgICAuZmVhdHVyZWRQdXBDYXJkcyB7XFxyXFxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgO1xcclxcbiAgICB9XFxyXFxuXFxyXFxufVxcclxcblxcclxcbkBtZWRpYShtYXgtd2lkdGg6IDY3NXB4KSB7XFxyXFxuICAgIFxcclxcbiAgICAucHVwQ2FyZCBpbWcge1xcclxcbiAgICAgICAgd2lkdGg6ICAxMmVtO1xcclxcbiAgICAgICAgaGVpZ2h0OiAxMmVtO1xcclxcbiAgICB9XFxyXFxuICAgIC5wdXBDYXJkIGRpdiB7XFxyXFxuICAgICAgICB3aWR0aDogMTJlbTtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAubmFtZSB7XFxyXFxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDM7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLmF2YWlsYWJsZSB7XFxyXFxuICAgICAgICBncmlkLWNvbHVtbjogNDtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5icmVlZCB7XFxyXFxuICAgICAgICBncmlkLXJvdzogMztcXHJcXG4gICAgICAgIGdyaWQtY29sdW1uOiAxIC8gNTtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgfVxcclxcblxcclxcblxcclxcbn1cXHJcXG5cXHJcXG5AbWVkaWEobWF4LXdpZHRoOiA0NzVweCkge1xcclxcbiAgICBcXHJcXG4gICAgLmZlYXR1cmVkUHVwQ2FyZHMge1xcclxcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxyXFxuICAgIH1cXHJcXG4gICAgLnB1cENhcmQgaW1nIHtcXHJcXG4gICAgICAgIHdpZHRoOiAgMTdlbTtcXHJcXG4gICAgICAgIGhlaWdodDogMTdlbTtcXHJcXG4gICAgfVxcclxcbiAgICAucHVwQ2FyZCBkaXYge1xcclxcbiAgICAgICAgd2lkdGg6IDE3ZW07XFxyXFxuICAgIH1cXHJcXG5cXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLyogUFVQIFBhZ2VzICovXFxyXFxuXFxyXFxuLnB1cC1yb3V0ZXMge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbn1cIl19XSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iXSwic291cmNlUm9vdCI6IiJ9